{"version":3,"sources":["node_modules/@babel/runtime/regenerator/index.js","node_modules/regenerator-runtime/runtime.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","js/utils/utils.js","node_modules/@babel/runtime/helpers/typeof.js","node_modules/@babel/runtime/helpers/assertThisInitialized.js","node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","node_modules/@babel/runtime/helpers/getPrototypeOf.js","node_modules/@babel/runtime/helpers/setPrototypeOf.js","node_modules/@babel/runtime/helpers/inherits.js","js/abstract-view.js","js/screens/footer-view.js","js/data/calc-statistic.js","js/data/data-adapter.js","js/loader/loader-utils.js","js/utils/resize.js","node_modules/@babel/runtime/helpers/defineProperty.js","js/app.js","js/data/settings.js","js/screens/stat-string-view.js","js/screens/statistic/game-stat-view.js","js/screens/statistic/total-stat-view.js","js/screens/header-view.js","js/screens/statistic/statistic-screen.js","js/screens/games/games-model.js","js/screens/games/game3-view.js","js/screens/games/game1-view.js","js/screens/games/game2-view.js","js/screens/games/game-screen.js","js/screens/intro/intro-view.js","js/screens/intro/intro.js","js/screens/greeting/greeting-view.js","js/screens/greeting/greeting.js","js/screens/rules/rules-view.js","js/screens/rules/rules.js","js/loader/loader.js","js/loader/modal-error-view.js","js/loader/modal-error-controler.js","js/main.js"],"names":["regenerator","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","asyncToGenerator","args","arguments","apply","classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","changeView","mainNode","innerHTML","clearScreen","_len","elements","Array","_key","container","element","appendChild","show","createClass","protoProps","staticProps","document","querySelector","_typeof2","_typeof","assertThisInitialized","ReferenceError","possibleConstructorReturn","_getPrototypeOf","o","_setPrototypeOf","p","inherits","subClass","superClass","AbstractView","createDomElement","template","_element","_render","bind","html","tagName","createElement","trim","firstChild","FooterView","getCountOfAnswers","answers","answerType","filter","calculateStatistic","lives","gameResult","assign","INITIAL_STATE","Number","isInteger","isArray","RULES","levels","score","success","AnswerType","totalAnswersCount","correctAnswersCount","fastAnswersCount","slowAnswersCount","wrongAnswersCount","answersPoints","correct","fast","slow","liveBonus","adapterServerData","data","map","game","preloadImages","promises","answer","url","image","Image","src","onload","onerror","concat","fetchImage","newSize","frame","ratioWidth","width","ratioHeights","height","largestRatio","resize","all","gameData","hash","window","location","replace","freeze","debug","toLowerCase","spinnerRotationTime","gameTime","tickTime","warningTime","slowTime","quickTime","_answersPoints","userName","time","currentLevel","StatStringView","_this","_answers","_liStrArr","join","GameStatView","index","_gameResult","_statString","_totalResult","TotalStatView","userResults","title","allGamesStat","HeaderView","_isGameHeader","_time","_lives","_this2","addEventListener","onWelcomeScreen","_headerTemplate","_buttonBackView","_emptyHeartHtml","_fullHeartHtml","_gameTimerView","_gameLivesView","fill","StatScreen","headerView","_onWelcomeScreen","statisticView","footerView","App","showGreeting","GameModel","restart","_state","changeLevel","die","tick","restartTime","nextLevel","_default","currentGame","_currentGameData","_gameQuestion","question","correctAnswer","includes","_images","evt","isCorrect","find","onAnswer","checkedRadioList","querySelectorAll","from","checkBox","every","_templateString","item","GameScreen","model","gameView","getGameView","statStringView","root","gameNode","className","_timer","clearTimeout","resetTime","_tick","isDead","start","showStats","end","header","replaceChild","updateHeader","_onAnswer","_changeGameView","setTimeout","view","_changeStatString","_debug","answerSpeed","getAnswerType","addAnswer","renderNextScreen","console","log","Game1View","Game2View","Game3View","IntroView","angle","intervalId","setInterval","_spinnerButton","setAttribute","clearInterval","removeAttribute","lastChild","replaceWith","preventDefault","onNextScreen","IntroScreen","introView","_onNextScreen","spinnerRotate","GreetingView","GreetingScreen","greetingView","showRules","RulesView","formInput","buttonSubmit","minLength","maxLength","style","borderColor","RulesScreen","rulesView","showGame","SERVER_URL","DEFAULT_NAME","Loader","response","ok","status","statusText","fetch","checkResponse","json","loadData","JSON","stringify","Content-Type","initOptions","body","headers","ModalErrorView","remove","showIntro","ModalErrorController","content","prepend","introScreen","spinnerStop","spinnerStart","loadGameData","showModalError","_context","t2","saveResults","loadResults","_context2","t0","render"],"mappings":"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","file":"main.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","const mainNode = document.querySelector(`main.central`);\n\n/**\n * Создает DOM-элемент на основе переданной в виде строки разметки (html кода).\n * Функция принимает на вход строку с разметкой и возвращать DOM-элемент.\n * @param {string} tagName - `div`, `button`, etc\n * @param {string} html\n * @return {HTMLElement}\n */\nconst createDomElement = (tagName, html) => {\n  const template = document.createElement(tagName);\n  template.innerHTML = html.trim(); // trim() - удалить пробелы вначале и конце строки\n  return template;\n};\n\nconst clearScreen = (container = mainNode) => {\n  container.innerHTML = ``;\n};\n\n/**\n * Insert template content into DOM node (<main> by default).\n * Принимает iterableObj of HTMLElements и вставляет содержимое шаблона в узел DOM (по умолчанию тэг <main>)\n  * @param {Object} container\n  * @param {array} elements - iterableObj of HTMLElements\n */\nconst show = (container = mainNode, elements) => {\n  elements.forEach((element) => container.appendChild(element));\n};\n\nconst changeView = (...elements) => {\n  clearScreen();\n  show(mainNode, elements);\n};\n\nexport {changeView, createDomElement};\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import {createDomElement} from \"./utils/utils\";\n\nexport default class AbstractView {\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(`Can't instantiate AbstractView, only concrete one`);\n    }\n  }\n\n  /** Возвращает строку, содержащую разметку. Должен быть обязательно переопределён в объектах-наследниках */\n  get template() {\n    throw new Error(`Template is required`);\n  }\n\n  /**\n   * Создает DOM-элемент с помощью метода render(), добавляет ему обработчики, с помощью метода bind()\n   * и возвращает созданный элемент, соответствующий представлению.\n   * Использует ленивые вычисления: элемент создается при первом обращении к геттеру с помощью метода render()\n   * @return {HTMLElement}\n   */\n  get element() {\n    if (this._element) {\n      return this._element;\n    }\n    this._element = this._render();\n    this.bind(this._element);\n    return this._element;\n  }\n\n  static createDomElement(html) {\n    return createDomElement(`div`, html).firstChild; // возвращаем без обертки `div`\n  }\n\n  /**\n   * Cоздает DOM-элемент на основе шаблона, который возвращается геттером template\n   * @return {HTMLElement}\n   * @private\n   */\n  _render() {\n    return AbstractView.createDomElement(this.template);\n  }\n\n  // show() {\n  //   show(this.element);\n  // }\n\n  /**\n   * Добавляет обработчики событий.\n   * Метод по умолчанию ничего не делает.\n   * Если нужно обработать какое-то событие, то этот метод должен быть переопределён в наследнике с необходимой логикой\n   */\n  bind() {\n    // bind handlers if required\n  }\n\n}\n","import AbstractView from \"../abstract-view\";\n\nexport default class FooterView extends AbstractView {\n  get template() {\n    // language=HTML\n    return `\n      <footer class=\"footer\">\n        <a href=\"https://htmlacademy.ru\" class=\"social-link\">\n          <span class=\"visually-hidden\">HTML Academy</span>\n          <svg class=\"icon\" width=\"108\" height=\"37\" viewBox=\"0 0 108 37\" fill=\"#000000\">\n            <use xlink:href=\"img/sprite.svg#logo-htmla\"></use>\n          </svg>\n        </a>\n        <span class=\"footer__made-in\">Сделано в <a href=\"https://htmlacademy.ru\" class=\"footer__link\">HTML Academy</a> &copy; 2019</span>\n        <div class=\"footer__social-links\">\n          <a href=\"https://twitter.com/htmlacademy_ru\" class=\"social-link\">\n            <span class=\"visually-hidden\">Твиттер</span>\n            <svg class=\"icon\" width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"#000000\">\n              <use xlink:href=\"img/sprite.svg#icon-tw\"></use>\n            </svg>\n          </a>\n          <a href=\"https://www.instagram.com/htmlacademy/\" class=\"social-link\">\n            <span class=\"visually-hidden\">Инстаграм</span>\n            <svg class=\"icon\" width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"#000000\">\n              <use xlink:href=\"img/sprite.svg#icon-ig\"></use>\n            </svg>\n          </a>\n          <a href=\"https://www.facebook.com/htmlacademy\" class=\"social-link\">\n            <span class=\"visually-hidden\">Фейсбук</span>\n            <svg class=\"icon\" width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"#000000\">\n              <use xlink:href=\"img/sprite.svg#icon-fb\"></use>\n            </svg>\n          </a>\n          <a href=\"https://vk.com/htmlacademy\" class=\"social-link\">\n            <span class=\"visually-hidden\">ВКонтакте</span>\n            <svg class=\"icon\" width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"#000000\">\n              <use xlink:href=\"img/sprite.svg#icon-vk\"></use>\n            </svg>\n          </a>\n        </div>\n      </footer>`;\n\n  }\n}\n\n","import {AnswerType, INITIAL_STATE, RULES} from \"./settings\";\n\n/**\n * Returns count of answers specified type\n * If answers type not specified, returns total count of answers\n * @param {array} answers\n * @param {string | boolean} answerType  / ex.: `CORRECT`, `WRONG`, `FAST`, `SLOW`\n * @return {number}\n */\nconst getCountOfAnswers = (answers, answerType = false) => {\n  if (answerType) {\n    return answers.filter((element) => element === answerType).length;\n  }\n\n  return answers.length;\n};\n\n/**\n * Функция подсчёта очков при окончании игры / Scoring function at the end of the game\n * Returns the total result to display on the statistics page\n *\n * @param {Object} result - результаты игры. Cм. INITIAL_STATE\n * @param {array} result.answers - Массив ответов пользователя на каждый вопрос по порядку.\n *                                 Варианты ответов: см - RULES.answersPoints\n * @param {number} result.lives - Количество оставшихся жизней\n * @return {object} gameResult - объект со статистикой игры\n */\nexport const calculateStatistic = (result) => {\n\n  let {answers, lives} = result;\n\n  // скопируем объект gameResult (см. INITIAL_STATE)\n  let gameResult = Object.assign({}, INITIAL_STATE.gameResult);\n\n  /**\n   *   Если игрок ответил меньше, чем на 10 вопросов, то игра считается не пройденной и функция должна вернуть -1;\n   *   Жизней может быть 0-3 type@ integer\n   */\n  if (!Number.isInteger(lives) || !Array.isArray(answers) || answers.length !== RULES.levels || lives < 0 || lives > 3) {\n    gameResult.score = -1;\n    return gameResult;\n  }\n\n  // true - false\n  gameResult.success = getCountOfAnswers(answers, AnswerType.WRONG) < RULES.lives;\n\n  // подсчет очков\n  gameResult.totalAnswersCount = getCountOfAnswers(answers);\n  gameResult.correctAnswersCount = getCountOfAnswers(answers, AnswerType.CORRECT);\n  gameResult.fastAnswersCount = getCountOfAnswers(answers, AnswerType.FAST);\n  gameResult.slowAnswersCount = getCountOfAnswers(answers, AnswerType.SLOW);\n  gameResult.wrongAnswersCount = getCountOfAnswers(answers, AnswerType.WRONG);\n\n\n  gameResult.score =\n    gameResult.correctAnswersCount * RULES.answersPoints.correct +\n    gameResult.fastAnswersCount * RULES.answersPoints.fast +\n    gameResult.slowAnswersCount * RULES.answersPoints.slow +\n    lives * RULES.liveBonus;\n\n  return gameResult;\n};\n","/**\n * Value of the game type in the local data and Server data are different. Fix it.\n *\n *********** local data:\n {\n    \"type\": \"paint-or-photo\",\n    \"question\": \"Угадай, фото или рисунок?\",\n    \"answers\": [{\"image\": {\"url\": \"https://k36.kn3.net/E9B401148.jpg\", \"width\": 705, \"height\": 455}, \"type\": \"painting\"}]\n }\n\n *********** Server data:\n *{\n    \"type\": \"tinder-like\",\n    \"question\": \"Угадай, фото или рисунок?\",\n    \"answers\": [{\"image\": {\"url\": \"https://k36.kn3.net/E9B401148.jpg\", \"width\": 705, \"height\": 455}, \"type\": \"painting\"}]\n    }\n */\n\nconst adapterServerData = (data) => {\n\n  return data.map((game) => {\n    if (game.type === `tinder-like`) {\n      game.type = `paint-or-photo`;\n    }\n    return game;\n  });\n\n};\n\nexport {adapterServerData};\n","import {resize} from \"../utils/resize\";\n\n// промис для одной картинки\nconst fetchImage = (url) => {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.src = url;\n    image.onload = () => resolve(image);\n    image.onerror = () => reject(`Не удалось загрузить картнку: ${url}`);\n  });\n};\n\n// Предзагрузка всех изображений и ресайз\n// \"answers\": [{\"image\": {\"url\": \"https://k36.kn3.net/E9B401148.jpg\", \"width\": 705, \"height\": 455}, \"type\": \"painting\"}]\nconst preloadImages = (data) => {\n  const promises = [];\n  data.forEach((game) => {\n    const answers = game.answers;\n    answers.forEach((answer) => {\n      // для каждой картинки создаем промис и пушим в массив\n      promises.push(fetchImage(answer.image.url)\n      // при успешкной загрузке меняем размер в исходных данных\n          .then((image) => {\n            const newSize = resize(answer.image, image);\n            answer.image.width = newSize.width;\n            answer.image.height = newSize.height;\n          })\n          // .catch((error) => console.log(error))\n      );\n    });\n  });\n  // console.log(promises);\n  return Promise.all(promises); // возвращаем промисы всех картинок\n};\n\n\nexport {preloadImages};\n","/**\n * Вписывает изображение в рамку\n * @param {object} frame Размеры рамки\n * @param {object} image Размеры изображения\n * @return {{width: number, height: number}}\n */\nconst resize = (frame, image) => {\n\n  const ratioWidth = 1 / (image.width / frame.width);\n  const ratioHeights = 1 / (image.height / frame.height);\n\n  const largestRatio = ratioWidth < ratioHeights ? ratioWidth : ratioHeights;\n\n  return {\n    width: image.width * largestRatio,\n    height: image.height * largestRatio,\n  };\n\n};\n\nexport {resize};\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import StatScreen from \"./screens/statistic/statistic-screen\";\nimport GameModel from \"./screens/games/games-model\";\nimport GameScreen from \"./screens/games/game-screen\";\nimport {RULES} from \"./data/settings\";\nimport IntroScreen from \"./screens/intro/intro\";\nimport GreetingScreen from \"./screens/greeting/greeting\";\nimport RulesScreen from \"./screens/rules/rules\";\nimport Loader from \"./loader/loader\";\nimport {adapterServerData} from \"./data/data-adapter\";\nimport ModalErrorController from \"./loader/modal-error-controler\";\nimport {preloadImages} from \"./loader/loader-utils\";\n\nlet gameData;\n\nexport default class App {\n\n  static async showIntro() {\n    const introScreen = new IntroScreen();\n    introScreen.show();\n    const spinnerStop = introScreen.spinnerStart();\n\n    try {\n      gameData = adapterServerData(await Loader.loadGameData());\n      await preloadImages(gameData);\n    } catch (error) {\n      App.showModalError(`Ошибка загрузки данных  с сервера (${error})`);\n    }\n    setTimeout(spinnerStop, RULES.spinnerRotationTime);\n  }\n\n  static showGreeting() {\n    const greetingScreen = new GreetingScreen();\n    greetingScreen.show();\n  }\n\n  static showRules() {\n    const rulesScreen = new RulesScreen();\n    rulesScreen.show();\n  }\n\n  static showGame(userName) {\n    const model = new GameModel(userName);\n    const gameScreen = new GameScreen(model, gameData);\n    gameScreen.start();\n  }\n\n  static async showStats(state) {\n    // в таком виде сохраняем на сервер: { answers: ['correct', 'wrong', 'fast', ..],  lives: 0 }\n    // в таком виде получаем userResults:\n    // [{\"answers\":[\"fast\",\"wrong\",\"fast\", ...],\"lives\":0,\"date\":1569318288998}, {\"answers\":[],\"lives\": 1,\"date\": ...}]\n    const data = {answers: state.answers, lives: state.lives};\n    const userName = state.userName;\n\n    try {\n      await Loader.saveResults(data, userName); // сохраняем статистику на сервер\n      const userResults = await Loader.loadResults(userName); // загружаем всю статистику по игроку\n      const statScreen = new StatScreen(userName, userResults);\n      statScreen.show();\n    } catch (error) {\n      App.showModalError(`Ошибка загрузки статистики с сервера (${error})`);\n    }\n  }\n\n  static showModalError(error) {\n    const modal = new ModalErrorController(error);\n    modal.render();\n  }\n\n}\n","const hash = window.location.hash.replace(`#`, ``);\n\nconst AnswerType = {\n  WRONG: `wrong`,\n  CORRECT: `correct`,\n  FAST: `fast`,\n  SLOW: `slow`,\n};\n\n/**\n * object settings rules of the game\n * @type @readonly {Object}\n * @prop {boolean} debug              - to use debug mode add #debug to url, and see console\n * @prop {number} spinnerRotationTime - spinner rotation time after the load data from server, in ms (intro screen)\n * @prop {number} levels              - количество уровней (вопросов)\n * @prop {number} gameTime            - время отводящееся на ответ в каждой игре\n * @prop {number} tickTime            - время обновления таймера, in ms\n * @prop {number} warningTime         - время при котором таймер начинает мигать красным // todo\n * @prop {number} slowTime            - slow answer time\n * @prop {number} quickTime           - fast answer time\n * @prop {number} lives               - Кол-во жизней (кол-во возможных ошибок)\n * @prop {number} liveBonus           - Бонус за каждую сохраненную жизнь\n * @prop {Object.<string, number>} answersPoints - Кол-во очков за ответы\n */\nconst RULES = Object.freeze({\n  debug: hash.toLowerCase() === `debug`,\n  spinnerRotationTime: 50,\n  levels: 10,\n  gameTime: 30,\n  tickTime: 1000,\n  warningTime: 5,\n  slowTime: 20,\n  quickTime: 10,\n  lives: 3,\n  liveBonus: 50,\n  answersPoints: {\n    [AnswerType.WRONG]: 0, // за неверный ответ\n    [AnswerType.CORRECT]: 100, // за верный ответ произведенный за Хсек (quickTime >  Хсек < slowTime)\n    [AnswerType.FAST]: 150, // за верный ответ быстрый ответ ( < quickTime сек)\n    [AnswerType.SLOW]: 50 // за верный медленный  ответ ( > slowTime сек)\n  }\n});\n\n/**\n * initial game settings\n * @type @readonly {Object}\n * @prop {string} userName              - Имя игрока по умолчанию\n * @prop {number} lives                 - Кол-во жизней на начало игры\n * @prop {number} time                  - Кол-во секунд до завершения игры\n * @prop {number} currentLevel          - Текущий уровень\n * @prop {array<string>} answers        - Массив ответов пользователя\n * @prop {Object.<string, any>} gameResult            - Объект с результатами игры\n */\nconst INITIAL_STATE = Object.freeze({\n  userName: `Неопознанный Енот`,\n  lives: RULES.lives,\n  time: RULES.gameTime,\n  currentLevel: 0,\n  answers: [], // ex.: [`CORRECT`, `CORRECT`, `WRONG`, `FAST`, `SLOW`]\n  gameResult: {\n    score: 0,\n    success: false\n  },\n});\n\n// https://es.dump.academy/pixel-hunter/questions\n/* eslint-disable quotes */\nconst GAME_DATA = [\n  {\n    \"type\": \"one-of-three\",\n    \"question\": \"Найдите фото среди изображений\",\n    \"answers\": [{\n      \"image\": {\"url\": \"https://k40.kn3.net/6A7A24F7C.jpg\", \"width\": 304, \"height\": 455},\n      \"type\": \"painting\"\n    }, {\n      \"image\": {\"url\": \"https://k35.kn3.net/2B925F44D.jpg\", \"width\": 304, \"height\": 455},\n      \"type\": \"painting\"\n    }, {\"image\": {\"url\": \"http://i.imgur.com/gUeK0qE.jpg\", \"width\": 304, \"height\": 455}, \"type\": \"photo\"}]\n  },\n  {\n    \"type\": \"one-of-three\",\n    \"question\": \"Найдите рисунок среди изображений\",\n    \"answers\": [{\n      \"image\": {\"url\": \"http://i.imgur.com/167pXyY.jpg\", \"width\": 304, \"height\": 455},\n      \"type\": \"photo\"\n    }, {\n      \"image\": {\"url\": \"https://i.redd.it/0uvt7jy0hy2y.jpg\", \"width\": 304, \"height\": 455},\n      \"type\": \"photo\"\n    }, {\"image\": {\"url\": \"https://k31.kn3.net/4BF6BBF0E.jpg\", \"width\": 304, \"height\": 455}, \"type\": \"painting\"}]\n  },\n  {\n    \"type\": \"paint-or-photo\",\n    \"question\": \"Угадай, фото или рисунок?\",\n    \"answers\": [{\"image\": {\"url\": \"https://k36.kn3.net/E9B401148.jpg\", \"width\": 705, \"height\": 455}, \"type\": \"painting\"}]\n  },\n  {\n    \"type\": \"one-of-three\",\n    \"question\": \"Найдите рисунок среди изображений\",\n    \"answers\": [{\n      \"image\": {\"url\": \"http://i.imgur.com/W5DNOVJ.jpg\", \"width\": 304, \"height\": 455},\n      \"type\": \"photo\"\n    }, {\n      \"image\": {\"url\": \"http://i.imgur.com/ncXRs5Y.jpg\", \"width\": 304, \"height\": 455},\n      \"type\": \"photo\"\n    }, {\"image\": {\"url\": \"https://k39.kn3.net/B27A12A74.jpg\", \"width\": 304, \"height\": 455}, \"type\": \"painting\"}]\n  },\n  {\n    \"type\": \"two-of-two\",\n    \"question\": \"Угадайте для каждого изображения фото или рисунок?\",\n    \"answers\": [{\n      \"image\": {\"url\": \"https://k37.kn3.net/695A61B3C.jpg\", \"width\": 468, \"height\": 458},\n      \"type\": \"painting\"\n    }, {\"image\": {\"url\": \"http://i.imgur.com/dWTKNtv.jpg\", \"width\": 468, \"height\": 458}, \"type\": \"photo\"}]\n  },\n  {\n    \"type\": \"paint-or-photo\",\n    \"question\": \"Угадай, фото или рисунок?\",\n    \"answers\": [{\"image\": {\"url\": \"http://i.imgur.com/DKR1HtB.jpg\", \"width\": 705, \"height\": 455}, \"type\": \"photo\"}]\n  },\n  {\n    \"type\": \"two-of-two\",\n    \"question\": \"Угадайте для каждого изображения фото или рисунок?\",\n    \"answers\": [{\n      \"image\": {\"url\": \"https://i.redd.it/cfw21jscl03y.jpg\", \"width\": 468, \"height\": 458},\n      \"type\": \"photo\"\n    }, {\"image\": {\"url\": \"https://i.imgur.com/DiHM5Zb.jpg\", \"width\": 468, \"height\": 458}, \"type\": \"photo\"}]\n  },\n  {\n    \"type\": \"two-of-two\",\n    \"question\": \"Угадайте для каждого изображения фото или рисунок?\",\n    \"answers\": [{\n      \"image\": {\"url\": \"http://i.imgur.com/mz0MSsy.jpg\", \"width\": 468, \"height\": 458},\n      \"type\": \"photo\"\n    }, {\"image\": {\"url\": \"http://i.imgur.com/zHRZW1C.jpg\", \"width\": 468, \"height\": 458}, \"type\": \"photo\"}]\n  },\n  {\n    \"type\": \"two-of-two\",\n    \"question\": \"Угадайте для каждого изображения фото или рисунок?\",\n    \"answers\": [{\n      \"image\": {\"url\": \"https://k41.kn3.net/FF5009BF0.jpg\", \"width\": 468, \"height\": 458},\n      \"type\": \"painting\"\n    }, {\"image\": {\"url\": \"https://k32.kn3.net/42C83EF0A.jpg\", \"width\": 468, \"height\": 458}, \"type\": \"painting\"}]\n  },\n  {\n    \"type\": \"paint-or-photo\",\n    \"question\": \"Угадай, фото или рисунок?\",\n    \"answers\": [{\"image\": {\"url\": \"https://i.imgur.com/KNfvQ44.jpg\", \"width\": 705, \"height\": 455}, \"type\": \"photo\"}]\n  }];\n\nexport {GAME_DATA, INITIAL_STATE, RULES, AnswerType};\n","/** View строки статистики. Показывается внизу на экранах игр и экране общей статистики*/\nimport {RULES} from \"../data/settings\";\nimport AbstractView from \"../abstract-view\";\n\nexport default class StatStringView extends AbstractView {\n  constructor(answers) {\n    super();\n    this._answers = answers;\n  }\n  get template() {\n    this._liStrArr = [];\n\n    /**\n     * Формируем массив <li> с нужными классами в зависимости переданного массива ответов\n     * e.g., <li class=\"stats__result stats__result--CORRECT\"></li>   <li class=\"stats__result stats__result--unknown\"></li>\n     */\n    for (let i = 0; i < RULES.levels; i++) {\n      this._liStrArr.push(this._answers[i] ? `<li class=\"stats__result stats__result--${this._answers[i]}\"/>`\n        : `<li class=\"stats__result stats__result--unknown\"/>`);\n    }\n\n    return `<ul class=\"stats\">${this._liStrArr.join(``)}</ul>`;\n  }\n}\n","import {RULES} from \"../../data/settings\";\nimport StatStringView from \"../stat-string-view\";\nimport {calculateStatistic} from \"../../data/calc-statistic\";\nimport AbstractView from \"../../abstract-view\";\n\nexport default class GameStatView extends AbstractView {\n  constructor(result, index) {\n    super();\n    this.index = index;\n    this._gameResult = result;\n    this._statString = new StatStringView(result.answers);\n    this._totalResult = calculateStatistic(result);\n  }\n\n  get template() {\n    // language=HTML\n    // шаблон в случае выигрыша\n    if (this._totalResult.success) {\n      return `\n        <table class=\"result__table\">\n          <tr>\n              <td class=\"result__number\">${this.index}</td>\n              <td colspan=\"2\">${this._statString.template}</td>\n              <td class=\"result__points\">× 100</td>\n              <td class=\"result__total\">${(this._totalResult.totalAnswersCount - this._totalResult.wrongAnswersCount) * RULES.answersPoints.correct}</td>\n          </tr>\n          ${this._totalResult.fastAnswersCount > 0 ? `<tr>\n            <td></td>\n                <td class=\"result__extra\">Бонус за скорость:</td>\n                <td class=\"result__extra\">${this._totalResult.fastAnswersCount}<span class=\"stats__result stats__result--fast\"/></td>\n                <td class=\"result__points\">× 50</td>\n                <td class=\"result__total\">${this._totalResult.fastAnswersCount * (RULES.answersPoints.fast - RULES.answersPoints.correct)}</td>\n            </tr>` : ``}\n          ${this._gameResult.lives > 0 ? `<tr>\n             <td></td>\n                <td class=\"result__extra\">Бонус за жизни:</td>\n                <td class=\"result__extra\">2 <span class=\"stats__result stats__result--alive\"/></td>\n                <td class=\"result__points\">× 50</td>\n                <td class=\"result__total\">100</td>\n             </tr>` : ``}\n          ${this._totalResult.slowAnswersCount > 0 ? `<tr>\n             <td></td>\n                <td class=\"result__extra\">Штраф за медлительность:</td>\n                <td class=\"result__extra\">${this._totalResult.slowAnswersCount}<span class=\"stats__result stats__result--slow\"/></td>\n                <td class=\"result__points\">× 50</td>\n                <td class=\"result__total\">${this._totalResult.slowAnswersCount * RULES.answersPoints.slow}</td>\n             </tr>` : ``}\n          <tr>\n                <td colspan=\"5\" class=\"result__total  result__total--final\">${this._totalResult.score}</td>\n          </tr>\n        </table>`;\n    }\n\n    // шаблон в случае проигрыша\n    return `<table class=\"result__table\">\n              <tr>\n                <td class=\"result__number\">${this.index}</td>\n                <td>${this._statString.template}</td>\n                <td class=\"result__total\"/>\n                <td class=\"result__total  result__total--final\">fail</td>\n              </tr>\n            </table>`;\n  }\n}\n","/**\n * View экрана общей статистики (все игры текущего пользователя)\n */\n\nimport AbstractView from \"../../abstract-view\";\nimport GameStatView from \"./game-stat-view\";\nimport {calculateStatistic} from \"../../data/calc-statistic\";\n\nexport default class TotalStatView extends AbstractView {\n  constructor(userName, userResults) {\n    super();\n\n    this.userName = userName;\n\n    userResults.reverse();\n    this.title = calculateStatistic(userResults[0]).success ? `Победа!` : `Вы проиграли..`;\n\n    this.allGamesStat = userResults.map((result, index) => {\n      return new GameStatView(result, index + 1).template;\n    }).join(``);\n  }\n\n  /** todo - отображать дату-время прошлых игр? из ответа сервера */\n  get template() {\n    return `<section class=\"result\">\n    <h2 class=\"result__title\">${this.userName}! ${this.title}</h2>\n    ${this.allGamesStat}\n    </section>`;\n  }\n}\n","/** View хеадера. На экранах игр c таймером и жизнями. На статических экранах только кнопка goWelcomeScreen*/\nimport AbstractView from \"../abstract-view\";\n\nexport default class HeaderView extends AbstractView {\n  constructor(state) {\n    super();\n    if (state) {\n      this._isGameHeader = true;\n      this._time = state.time;\n      this._lives = state.lives;\n    }\n  }\n\n  get template() {\n\n    this._headerTemplate = ``;\n\n    // language=HTML\n    this._buttonBackView = `<button class=\"back\">\n        <span class=\"visually-hidden\">Вернуться к началу</span>\n        <svg class=\"icon\" width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"#000000\">\n          <use xlink:href=\"img/sprite.svg#arrow-left\"></use>\n        </svg>\n        <svg class=\"icon\" width=\"101\" height=\"44\" viewBox=\"0 0 101 44\" fill=\"#000000\">\n          <use xlink:href=\"img/sprite.svg#logo-small\"></use>\n        </svg>\n      </button>`;\n\n    this._headerTemplate += this._buttonBackView;\n\n    if (this._isGameHeader) {\n      this._emptyHeartHtml = `<img src=\"img/heart__empty.svg\" class=\"game__heart\" alt=\" Missed Life\" width=\"31\" height=\"27\">`;\n      this._fullHeartHtml = `<img src=\"img/heart__full.svg\" class=\"game__heart\" alt=\"Life\" width=\"31\" height=\"27\">`;\n      this._gameTimerView = `<div class=\"game__timer\">${this._time}</div>`;\n\n      // [].fill().join(``) заполнить все элементы массива, объеденить в строку\n      this._gameLivesView = `<div class=\"game__lives\">\n      ${new Array(3 - this._lives).fill(this._emptyHeartHtml).join(``)}\n      ${new Array(this._lives).fill(this._fullHeartHtml).join(``)}</div>`;\n\n      this._headerTemplate += this._gameTimerView + this._gameLivesView;\n    }\n\n    return `<header class=\"header\">${this._headerTemplate}</header>`;\n  }\n\n  onWelcomeScreen() {\n  }\n\n  bind() {\n    const arrowBack = this.element.querySelector(`.back`);\n    arrowBack.addEventListener(`click`, () => {\n      this.onWelcomeScreen();\n    });\n  }\n\n}\n\n\n","import {changeView} from \"../../utils/utils\";\nimport FooterView from \"../footer-view\";\nimport TotalStatView from \"./total-stat-view\";\nimport HeaderView from \"../header-view\";\nimport App from \"../../app\";\n\n\nexport default class StatScreen {\n  constructor(userName, userResults) {\n\n    this.headerView = new HeaderView();\n    this.headerView.onWelcomeScreen = StatScreen._onWelcomeScreen.bind(this);\n\n    this.statisticView = new TotalStatView(userName, userResults);\n    this.footerView = new FooterView();\n  }\n\n  show() {\n    changeView(this.headerView.element, this.statisticView.element, this.footerView.element);\n  }\n\n  static _onWelcomeScreen() {\n    App.showGreeting();\n  }\n\n}\n","import {INITIAL_STATE} from \"../../data/settings\";\n\n// MODEL\nexport default class GameModel {\n  constructor(userName) {\n    this.restart();\n    this._state.userName = userName;\n  }\n\n  get state() {\n    return Object.freeze(this._state);\n  }\n\n  get userName() {\n    return this._state.userName;\n  }\n\n  nextLevel() {\n    this._state = changeLevel(this._state, this._state.currentLevel + 1);\n  }\n\n  addAnswer(answerType) {\n    //  коолекционирует результаты ответа пользователя [CORRECT, SLOW, etc]\n    this._state.answers.push(answerType);\n  }\n\n  die() {\n    this._state = die(this.state);\n  }\n\n  restart() {\n    // обнулить данные модели\n    this._state = Object.assign({}, INITIAL_STATE);\n    // Object.assign, не выполняят глубокого копирования (вложенные объекты передаются ссылкой).\n    // JSON.parse(JSON.stringify(INITIAL_STATE)) тоже не сработает, так как в объекте есть метод\n    // Поэтому либо написать метод для глубокого копирования, либо обнулить влоб:\n    this._state.answers = [];\n    this._state.gameResult.score = 0;\n    this._state.gameResult.success = false;\n  }\n\n  isDead() {\n    return this._state.lives <= 0;\n  }\n\n  tick() {\n    this._state = tick(this._state);\n  }\n\n  resetTime() {\n    this._state = restartTime(this._state);\n  }\n}\n\nconst changeLevel = (state, nextLevel) => {\n  if (typeof nextLevel !== `number`) {\n    throw new Error(`The level must be a number`);\n  }\n  if (nextLevel < 0) {\n    throw new Error(`Level should not be negative value`);\n  }\n\n  return Object.assign({}, state, {\n    currentLevel: nextLevel\n  });\n};\n\nconst tick = (state) => {\n  state = Object.assign({}, state, {\n    time: state.time - 1\n  });\n  return state;\n};\n\nconst die = (state) => {\n  state = Object.assign({}, state, {\n    lives: state.lives - 1\n  });\n  return state;\n};\n\nconst restartTime = (state) => {\n  state = Object.assign({}, state, {\n    time: INITIAL_STATE.time + 1 // + 1 чтобы после 1го тика на экране отобразилось INITIAL_STATE.time\n  });\n  return state;\n};\n","/**  View игры типа3: `Найдите рисунок среди изображений` (`one-of-three`) */\n\nimport AbstractView from \"../../abstract-view\";\n\nexport default class extends AbstractView {\n  constructor(currentGame) {\n    super();\n    this._currentGameData = currentGame;\n    this._gameQuestion = currentGame.question;\n    this.correctAnswer = this._gameQuestion.includes(`Найдите фото среди изображений`) ? `photo` : `painting`;\n    // создадим массив картинок текущей игры\n    this._images = currentGame.answers.map((element) => {\n      return element.image;\n    });\n  }\n\n  // todo сократить шаблон, отдавая по диву на каждый currentGame.answers?\n  get template() {\n    return `\n      <section class=\"game\">\n        <p class=\"game__task\">${this._gameQuestion}</p>\n        <form class=\"game__content  game__content--triple\">\n            <div class=\"game__option\">\n                <img src=\"${this._images[0].url}\" alt=\"Option 1\" width=${this._images[0].width} height=${this._images[0].height}>\n            </div>\n            <div class=\"game__option  game__option--selected\">\n                <img src=\"${this._images[1].url}\" alt=\"Option 2\" width=${this._images[1].width} height=${this._images[1].height}>\n            </div>\n            <div class=\"game__option\">\n                <img src=\"${this._images[2].url}\" alt=\"Option 3\" width=${this._images[2].width} height=${this._images[2].height}>\n            </div>\n        </form>\n      </section>`;\n  }\n\n  onAnswer() {\n  }\n\n  /**\n   * Описывает поведение, при клике по картинке\n   * Не вызывает напрямую действия, которые должны произойти, а вызывает коллбэк onAnswers(), который будет\n   * переопределяться снаружи (паттерн «Слушатель»). В коллбэк передается массив ответов e.g., [painting]\n   */\n  bind() {\n    const form = this.element.querySelector(`.game__content`);\n    form.addEventListener(`click`, (evt) => {\n\n      // проверяем ответ\n      // const answerStr = evt.target.alt; // e.g. \"Option 2\"\n      // const userAnswerNumber = parseInt(answerStr.slice(-1), 10); // \"Option 2\".slice(-1) вернет \"2\"\n      // let isCorrect = this._currentGameData.answers[userAnswerNumber - 1].type === this.correctAnswer; // массив с нуля game.answers[0], а ответы с еденицы \"Option 1\", \"Option 2\"\n\n      // проверяем ответ\n      const answer = this._currentGameData.answers.find((element) => element.image.url === evt.target.src);\n      const isCorrect = answer.type === this.correctAnswer;\n\n      this.onAnswer(isCorrect);\n    });\n  }\n}\n","/** View игры типа1: `Угадай, фото или рисунок?` (`paint-or-photo`) с одним изображением todo объеденить view game1 & game2 & game3 ?*/\n\nimport AbstractView from \"../../abstract-view\";\n\nexport default class extends AbstractView {\n  constructor(currentGame) {\n    super();\n    this._currentGameData = currentGame;\n    this._gameQuestion = currentGame.question;\n    // создадим массив картинок текущей игры\n    this._images = currentGame.answers.map((element) => {\n      return element.image;\n    });\n  }\n\n  get template() {\n    this._templateString = this._images.map((item, i) => {\n      return `<div class=\"game__option\"><img src=\"${item.url}\" alt=\"Option ${++i}\" width=${item.width} height=${item.height}>\n              <label class=\"game__answer game__answer--photo\">\n                <input class=\"visually-hidden\" name=\"question${i}\" type=\"radio\" value=\"photo\">\n                <span>Фото</span>\n              </label>\n              <label class=\"game__answer game__answer--paint\">\n                <input class=\"visually-hidden\" name=\"question${i}\" type=\"radio\" value=\"painting\">\n                <span>Рисунок</span>\n              </label></div>`;\n    }).join(``);\n    return `<section class=\"game\"><p class=\"game__task\">${this._gameQuestion}</p>\n      <form class=\"game__content game__content--wide\">${this._templateString}</form></section>`;\n  }\n\n  onAnswer() {\n  }\n\n  /**\n   * Описывает поведение, при выборе всех доступных <input type=\"radio\">\n   * Не вызывает напрямую действия, которые должны произойти, а вызывает коллбэк onAnswers(), который будет\n   * переопределяться снаружи (паттерн «Слушатель»). В коллбэк передается массив ответов e.g., [painting, photo]\n   */\n  bind() {\n    const form = this.element.querySelector(`.game__content`);\n    form.addEventListener(`change`, () => {\n      const checkedRadioList = this.element.querySelectorAll(`input:checked`); // выбрать все чекнутые  type=\"radio\"\n\n      if (checkedRadioList.length === this._currentGameData.answers.length) { // если их столько же сколько ответов(картинок) в игре\n        const answers = Array.from(checkedRadioList).map((checkBox) => checkBox.value);\n\n        // проверяем ответы\n        let isCorrect = answers.every((value, i) => value === this._currentGameData.answers[i].type);\n\n        this.onAnswer(isCorrect);\n      }\n    });\n  }\n}\n","/** View игры типа2: `Угадайте для каждого изображения фото или рисунок?` (`two-of-two`) с двумя изображениями */\n\nimport AbstractView from \"../../abstract-view\";\n\nexport default class extends AbstractView {\n  constructor(currentGame) {\n    super();\n    this._currentGameData = currentGame;\n    this._gameQuestion = currentGame.question;\n    // создадим массив картинок текущей игры\n    this._images = currentGame.answers.map((element) => {\n      return element.image;\n    });\n  }\n\n  get template() {\n    this._templateString = this._images.map((item, i) => {\n      return `<div class=\"game__option\"><img src=\"${item.url}\" alt=\"Option ${++i}\" width=${item.width} height=${item.height}>\n              <label class=\"game__answer game__answer--photo\">\n                <input class=\"visually-hidden\" name=\"question${i}\" type=\"radio\" value=\"photo\">\n                <span>Фото</span>\n              </label>\n              <label class=\"game__answer game__answer--paint\">\n                <input class=\"visually-hidden\" name=\"question${i}\" type=\"radio\" value=\"painting\">\n                <span>Рисунок</span>\n              </label></div>`;\n    }).join(``);\n    return `<section class=\"game\"><p class=\"game__task\">${this._gameQuestion}</p>\n      <form class=\"game__content\">${this._templateString}</form></section>`;\n  }\n\n  onAnswer() {\n  }\n\n  /**\n   * Описывает поведение, при выборе всех доступных <input type=\"radio\">\n   * Не вызывает напрямую действия, которые должны произойти, а вызывает коллбэк onAnswers(), который будет\n   * переопределяться снаружи (паттерн «Слушатель»). В коллбэк передается массив ответов e.g., [painting, photo]\n   */\n  bind() {\n    const form = this.element.querySelector(`.game__content`);\n    form.addEventListener(`change`, () => {\n      const checkedRadioList = this.element.querySelectorAll(`input:checked`); // выбрать все чекнутые  type=\"radio\"\n\n      if (checkedRadioList.length === this._currentGameData.answers.length) { // если их столько же сколько ответов(картинок) в игре\n        const answers = Array.from(checkedRadioList).map((checkBox) => checkBox.value);\n\n        // проверяем ответы\n        let isCorrect = answers.every((value, i) => value === this._currentGameData.answers[i].type);\n\n        this.onAnswer(isCorrect);\n      }\n    });\n  }\n}\n","// Презентер (MV Presenter) - связывает модель игры с представлением\nimport HeaderView from \"../header-view\";\nimport FooterView from \"../footer-view\";\nimport StatStringView from \"../stat-string-view\";\nimport App from \"../../app\";\nimport Game3View from \"./game3-view\";\nimport Game1View from \"./game1-view\";\nimport Game2View from \"./game2-view\";\nimport {AnswerType, RULES} from \"../../data/settings\";\nimport {changeView} from \"../../utils/utils\";\n\n\nexport default class GameScreen {\n  constructor(model, data) {\n    // Инициализация и настройка игры\n    this.model = model;\n    this.gameData = data;\n    this.headerView = new HeaderView(this.model.state);\n    this.gameView = GameScreen.getGameView(this.gameData[this.model.state.currentLevel]);\n    this.statStringView = new StatStringView(this.model.state.answers);\n    this.footerView = new FooterView();\n\n    this.root = document.querySelector(`main.central`);\n    this.root.appendChild(this.headerView.element);\n    this.root.appendChild(this.gameView.element);\n    this.gameNode = this.root.querySelector(`.${this.gameView.element.className}`);\n    this.gameNode.appendChild(this.statStringView.element);\n    this.root.appendChild(this.footerView.element);\n    this._timer = null;\n  }\n\n  get element() {\n    return this.root;\n  }\n\n  stop() {\n    // Остановка игры\n    clearTimeout(this._timer);\n  }\n\n  start() {\n    // Старт игры\n    changeView(this.headerView.element, this.gameView.element, this.footerView.element);\n    this.changeLevel();\n    this.model.resetTime();\n    this._tick();\n  }\n\n  restart() {\n    // Продолжение или сброс игры\n    if (this.model.isDead()) {\n      this.model.restart();\n    }\n    this.start();\n  }\n\n  end() {\n    App.showStats(this.model.state);\n  }\n\n  exit() {\n    // Выход из игры\n    // todo рендерить модалку?\n    App.showStats(this.model);\n  }\n\n  renderNextScreen() {\n    if (!this.model.isDead() && (this.model.state.currentLevel + 1) <= RULES.levels - 1) { // если не умер и есть следующий уровень\n      this.model.nextLevel();\n      this.start();\n    } else {\n      this.end();\n    }\n  }\n\n  updateHeader() {\n    // Обновление статистики игрока\n    const header = new HeaderView(this.model.state);\n    header.onWelcomeScreen = this._onWelcomeScreen.bind(this);\n    this.root.replaceChild(header.element, this.root.firstChild);\n  }\n\n  changeLevel() {\n    // Обновление текущего уровня\n    this.updateHeader();\n    const gameView = GameScreen.getGameView(this.gameData[this.model.state.currentLevel]);\n    gameView.onAnswer = this._onAnswer.bind(this);\n    this._changeGameView(gameView);\n  }\n\n  _tick() {\n    this.model.tick();\n    this.updateHeader();\n    this._timer = setTimeout(() => this._tick(), RULES.tickTime);\n\n    // если время вышло\n    if (this.model.state.time === 0) {\n      this._onAnswer(false);\n    }\n  }\n\n  _changeGameView(view) {\n    // смена игрового экрана\n    this.root.replaceChild(view.element, this.gameView.element);\n    this.gameView = view;\n    this.gameNode = this.root.querySelector(`.${this.gameView.element.className}`);\n    this._changeStatString();\n    this._debug();\n  }\n\n  _changeStatString() {\n    // смена строки состояния (строка результатов ответов)\n    this.statStringView = new StatStringView(this.model.state.answers);\n    this.gameNode.appendChild(this.statStringView.element);\n  }\n\n  _onAnswer(answer) {\n    // Обрабтка ответа пользователя\n    this.stop();\n    const answerSpeed = RULES.gameTime - this.model.state.time;\n    let answerType;\n    if (answer) {\n      answerType = GameScreen.getAnswerType(answer, answerSpeed);\n    } else {\n      this.model.die();\n      answerType = AnswerType.WRONG;\n    }\n    this.model.addAnswer(answerType);\n    this.renderNextScreen();\n  }\n\n  _onWelcomeScreen() {\n    this.stop();\n    this.model.restart();\n    App.showGreeting();\n  }\n\n  _debug() {\n    if (RULES.debug) {\n      // eslint-disable-next-line no-console\n      console.error(`debag mode ON`);\n      // eslint-disable-next-line no-console\n      this.gameData[this.model.state.currentLevel].answers.map((answer) => console.log(answer.type));\n    }\n  }\n\n  static getGameView(game) {\n    switch (game.type) {\n      case `paint-or-photo`:\n        return new Game1View(game);\n      case `two-of-two`:\n        return new Game2View(game);\n      case `one-of-three`:\n        return new Game3View(game);\n      default:\n        return new Error(`Не удалось получить представление игры`);\n    }\n  }\n\n  static getAnswerType(answer, answerSpeed) {\n\n    if (answerSpeed < RULES.quickTime) {\n      return AnswerType.FAST;\n    }\n    if (answerSpeed > RULES.slowTime) {\n      return AnswerType.SLOW;\n    }\n    return AnswerType.CORRECT;\n  }\n}\n","/** View экрана \"Интро\" */\n\nimport AbstractView from \"../../abstract-view\";\n\nexport default class IntroView extends AbstractView {\n\n  // language=HTML\n  get template() {\n    return `<section class=\"intro\">\n        <button class=\"intro__asterisk asterisk\" type=\"button\"><span class=\"visually-hidden\">Продолжить</span>+</button>\n        <p class=\"intro__motto\"><sup>*</sup> Это не фото. Это рисунок маслом нидерландского художника-фотореалиста Tjalf Sparnaay.</p>\n      </section>`;\n  }\n\n  onNextScreen() {\n  }\n\n  spinnerRotate() {\n    let angle = 0;\n    const update = () => {\n      angle = angle < 360 ? angle += 10 : angle = 0;\n      this._spinnerButton.setAttribute(`style`, `transform:rotate(${angle}deg)`);\n    };\n    const intervalId = setInterval(update, 20);\n    return () => {\n      clearInterval(intervalId);\n      this._spinnerButton.removeAttribute(`style`);\n      this._spinnerButton.lastChild.replaceWith(`*`);\n    };\n  }\n\n  /**\n   * Метод bind описывает поведение кнопки при нажатии на нее.\n   * Не вызывает напрямую действия, которые должны произойти по нажатию на кнопку,\n   * а вместо этого вызывает коллбэк onNextScreen(), который будет\n   * переопределяться снаружи (паттерн «Слушатель»)\n   */\n  bind() {\n    this._spinnerButton = this.element.querySelector(`.intro__asterisk`);\n    this._spinnerButton.addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n      this.onNextScreen();\n    });\n  }\n}\n","import {changeView} from \"../../utils/utils\";\nimport IntroView from \"./intro-view\";\nimport App from \"../../app\";\n\nexport default class IntroScreen {\n  constructor() {\n    this.introView = new IntroView();\n    this.introView.onNextScreen = IntroScreen._onNextScreen.bind(this);\n  }\n\n  show() {\n    changeView(this.introView.element);\n  }\n\n  spinnerStart() {\n    return this.introView.spinnerRotate();\n  }\n\n  static _onNextScreen() {\n    App.showGreeting();\n  }\n}\n","/** View экрана \"Приветствие\"  */\n\nimport AbstractView from \"../../abstract-view\";\n\nexport default class GreetingView extends AbstractView {\n\n  // language=HTML\n  get template() {\n    return `\n      <section class=\"greeting central--blur\">\n        <img class=\"greeting__logo\" src=\"img/logo_ph-big.svg\" width=\"201\" height=\"89\" alt=\"Pixel Hunter\">\n        <div class=\"greeting__asterisk asterisk\"><span class=\"visually-hidden\">Я просто красивая звёздочка</span>*</div>\n        <div class=\"greeting__challenge\">\n          <h3 class=\"greeting__challenge-title\">Лучшие художники-фотореалисты бросают тебе вызов!</h3>\n          <p class=\"greeting__challenge-text\">Правила игры просты:</p>\n          <ul class=\"greeting__challenge-list\">\n            <li>Нужно отличить рисунок от фотографии и сделать выбор.</li>\n            <li>Задача кажется тривиальной, но не думай, что все так просто.</li>\n            <li>Фотореализм обманчив и коварен.</li>\n            <li>Помни, главное — смотреть очень внимательно.</li>\n          </ul>\n        </div>\n        <button class=\"greeting__continue\" type=\"button\">\n          <span class=\"visually-hidden\">Продолжить</span>\n          <svg class=\"icon\" width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"#000000\">\n            <use xlink:href=\"img/sprite.svg#arrow-right\"></use>\n          </svg>\n        </button>\n      </section>`;\n  }\n\n  onNextScreen() {\n  }\n\n  /**\n   * Метод bind описывает поведение кнопки при нажатии на нее.\n   * Не вызывает напрямую действия, которые должны произойти по нажатию на кнопку,\n   * а вместо этого вызывает коллбэк onNextScreen(), который будет\n   * переопределяться снаружи (паттерн «Слушатель»)\n   */\n  bind() {\n    const arrowRight = this.element.querySelector(`.greeting__continue`);\n    arrowRight.addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n      this.onNextScreen();\n    });\n  }\n}\n","import GreetingView from \"./greeting-view\";\nimport {changeView} from \"../../utils/utils\";\nimport FooterView from \"../footer-view\";\nimport App from \"../../app\";\n\n\nexport default class GreetingScreen {\n  constructor() {\n    this.greetingView = new GreetingView();\n    this.footerView = new FooterView();\n    this.greetingView.onNextScreen = GreetingScreen._onNextScreen.bind(this);\n  }\n\n  show() {\n    changeView(this.greetingView.element, this.footerView.element);\n  }\n\n  static _onNextScreen() {\n    App.showRules();\n  }\n}\n","/**\n * View экрана \"Правила игры\"\n */\n\nimport {RULES} from \"../../data/settings\";\nimport AbstractView from \"../../abstract-view\";\n\nexport default class RulesView extends AbstractView {\n  // language=HTML <header class=\"header\">+++++++++++</header><section class=\"rules\"><header class=\"header\"></header>\n  get template() {\n    return `<section class=\"rules\">\n    <h2 class=\"rules__title\">Правила</h2>\n    <ul class=\"rules__description\">\n        <li>Угадай ${RULES.levels} раз для каждого изображения фото\n            <img class=\"rules__icon\" src=\"img/icon-photo.png\" width=\"32\" height=\"31\" alt=\"Фото\"> или рисунок\n            <img class=\"rules__icon\" src=\"img/icon-paint.png\" width=\"32\" height=\"31\" alt=\"Рисунок\"></li>\n        <li>Фотографиями или рисунками могут быть оба изображения.</li>\n        <li>На каждую попытку отводится ${RULES.gameTime} секунд.</li>\n        <li>Ошибиться можно не более ${RULES.lives} раз.</li>\n    </ul>\n    <p class=\"rules__ready\">Готовы?</p>\n    <form class=\"rules__form\">\n        <input class=\"rules__input\" type=\"text\" placeholder=\"Ваше Имя\" maxlength=\"20\" minlength=\"3\">\n        <button class=\"rules__button  continue\" type=\"submit\" disabled>Go!</button>\n    </form>\n  </section>`;\n  }\n\n  onNextScreen() {\n  }\n\n  bind() {\n\n    /**\n     * Обработчики:\n     * 1) На поле ввода логина (`.rules__input`). Если ввели значение между minlength=\"3\" и maxlength=\"20\", которые задал в html,\n     * то активировать кнопку `Go`, иначе поле ввода логина обвести красной рамкой\n     * 2) На кнопку Go (`.rules__button`)  - переключить на следующий экран\n     */\n    const formInput = this.element.querySelector(`.rules__input`);\n    const buttonSubmit = this.element.querySelector(`.rules__button`);\n\n    formInput.addEventListener(`input`, (evt) => {\n      if (formInput.minLength <= evt.target.value.length && evt.target.value.length <= formInput.maxLength) {\n        buttonSubmit.removeAttribute(`disabled`);\n        buttonSubmit.removeAttribute(`style`);\n      } else {\n        buttonSubmit.setAttribute(`disabled`, `disabled`);\n        formInput.style.borderColor = `red`;\n      }\n    });\n\n    buttonSubmit.addEventListener(`click`, () => {\n      this.onNextScreen(formInput.value);\n    });\n  }\n}\n","import RulesView from \"./rules-view\";\nimport {changeView} from \"../../utils/utils\";\nimport HeaderView from \"../header-view\";\nimport FooterView from \"../footer-view\";\nimport App from \"../../app\";\n\nexport default class RulesScreen {\n  constructor() {\n    this.rulesView = new RulesView();\n    this.headerView = new HeaderView();\n    this.footerView = new FooterView();\n    this.rulesView.onNextScreen = RulesScreen._onNextScreen.bind(this);\n  }\n\n  show() {\n    changeView(this.headerView.element, this.rulesView.element, this.footerView.element);\n  }\n\n  static _onNextScreen(userName) {\n    App.showGame(userName);\n  }\n\n}\n","import {INITIAL_STATE} from \"../data/settings\";\n\nconst SERVER_URL = `https://es.dump.academy/pixel-hunter`;\nconst APP_ID = 322232;\nconst DEFAULT_NAME = INITIAL_STATE.userName;\n\nexport default class Loader {\n\n  static async checkResponse(response) {\n    if (response.ok && response.status === 200) {\n      return response;\n    }\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  static async loadData(url) {\n    const response = await fetch(url);\n    await this.checkResponse(response);\n    return response.json();\n  }\n\n  static async loadGameData() {\n    return await this.loadData(`${SERVER_URL}/questions`);\n  }\n\n  static async saveResults(data, name = DEFAULT_NAME) {\n    const initOptions = {\n      body: await JSON.stringify(data),\n      headers: {\n        'Content-Type': `application/json`\n      },\n      method: `POST`\n    };\n    const response = await fetch(`${SERVER_URL}/stats/${APP_ID}-${name}`, initOptions);\n    return await this.checkResponse(response);\n  }\n\n  static async loadResults(name = DEFAULT_NAME) {\n    return await this.loadData(`${SERVER_URL}/stats/${APP_ID}-${name}`);\n  }\n}\n","import AbstractView from '../abstract-view';\nimport App from \"../app\";\n\nclass ModalErrorView extends AbstractView {\n  constructor(error) {\n    super();\n    this.error = error;\n  }\n\n  get template() {\n    return `\n  <section class=\"modal\">\n    <div class=\"modal__inner\">\n      <h2 class=\"modal__title\">Произошла ошибка!</h2>\n      <p class=\"modal__text modal__text--error\">${this.error}</p> <p>Пожалуйста, перезагрузите страницу.</p>\n    </div>\n  </section>\n    `;\n  }\n\n  bind() {\n    this.element.addEventListener(`click`, () => {\n      this.element.remove();\n      App.showIntro();\n    });\n  }\n}\n\nexport default ModalErrorView;\n\n\n","// Модальное окно с ошибкой\nimport ModalErrorView from './modal-error-view';\n\nexport default class ModalErrorController {\n  constructor(error) {\n    this.error = error;\n    this.content = new ModalErrorView(error);\n  }\n\n  render() {\n    document.body.prepend(this.content.element);\n  }\n}\n","import App from \"./app\";\n\n// include a polyfill in build (comment out if not needed)\n// import \"core-js/stable\"; // needed to polyfill ECMAScript features\n// import \"regenerator-runtime/runtime\"; // needed to use transpiled generator functions\n\nApp.showIntro();\n"]}